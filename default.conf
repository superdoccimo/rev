map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen 80;
    server_name example.xyz;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location /ads.txt {
        alias /var/www/html/ads.txt;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

# --- Temporarily comment out the HTTPS server block ---
# server {
#     listen 443 ssl;
#     server_name example.xyz;
#
#     ssl_certificate     /etc/letsencrypt/live/example.xyz/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/example.xyz/privkey.pem;
#
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 1d;
#
#     location / {
#         proxy_pass http://10.0.0.37:8080;
#         proxy_http_version 1.1;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection $connection_upgrade;
#         proxy_read_timeout 3600s;
#         proxy_send_timeout 3600s;
#         proxy_buffering off;
#     }
# }